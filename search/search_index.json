{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the TagStudio Documentation!","text":"<p>TagStudio is a photo &amp; file organization application with an underlying tag-based system that focuses on giving freedom and flexibility to the user. No proprietary programs or formats, no sea of sidecar files, and no complete upheaval of your filesystem structure.</p> TagStudio Alpha v9.5.0 running on macOS Sequoia."},{"location":"#feature-roadmap","title":"Feature Roadmap","text":"<p>The Feature Roadmap lists all of the planned core features for TagStudio to be considered \"feature complete\" along with estimated release milestones. The development and testing of these features takes priority over all other requested or submitted features unless they are later added to this roadmap. This helps ensure that TagStudio eventually sees a full release and becomes more usable by more people more quickly.</p>"},{"location":"#current-features","title":"Current Features","text":""},{"location":"#libraries","title":"Libraries","text":"<ul> <li>Create libraries centered around a system directory. Libraries contain a series of entries: the representations of your files combined with metadata fields. Each entry represents a file in your library\u2019s directory, and is linked to its location.</li> <li>Address moved, deleted, or otherwise \"unlinked\" files by using the \"Fix Unlinked Entries\" option in the Tools menu.</li> </ul>"},{"location":"#tagging-metadata-fields","title":"Tagging + Metadata Fields","text":"<ul> <li>Add custom powerful tags to your library entries</li> <li>Add metadata fields to your library entries, including:<ul> <li>Name, Author, Artist (Single-Line Text Fields)</li> <li>Description, Notes (Multi-Line Text Fields)</li> </ul> </li> <li>Create rich tags composed of a name, color, a list of aliases, and a list of \"parent tags\" - these being tags in which these tags inherit values from.</li> <li>Copy and paste tags and fields across file entries</li> <li>Automatically organize tags into groups based on parent tags marked as \"categories\"</li> <li>Generate tags from your existing folder structure with the \"Folders to Tags\" macro (NOTE: these tags do NOT sync with folders after they are created)</li> </ul>"},{"location":"#search","title":"Search","text":"<ul> <li>Search for file entries based on tags, file path (<code>path:</code>), file types (<code>filetype:</code>), and even media types! (<code>mediatype:</code>)</li> <li>Use and combine Boolean operators (<code>AND</code>, <code>OR</code>, <code>NOT</code>) along with parentheses groups, quotation escaping, and underscore substitution to create detailed search queries</li> <li>Use special search conditions (<code>special:untagged</code>) to find file entries without tags or fields, respectively</li> </ul>"},{"location":"#file-entries","title":"File Entries","text":"<ul> <li>Nearly all file types are supported in TagStudio libraries - just not all have dedicated thumbnail support.</li> <li>Preview most image file types, animated GIFs, videos, plain text documents, audio files, Blender projects, and more!</li> <li>Open files or file locations by right-clicking on thumbnails and previews and selecting the respective context menu options. You can also click on the preview panel image to open the file, and click the file path label to open its location.</li> <li>Delete files from both your library and drive by right-clicking the thumbnail(s) and selecting the \"Move to Trash\"/\"Move to Recycle Bin\" option.</li> </ul>"},{"location":"install/","title":"Installation","text":""},{"location":"install/#releases","title":"Releases","text":"<p>TagStudio provides executable releases as well as full access to its source code under the GPLv3 license.</p> <p>To download executable builds of TagStudio, visit the Releases page of the GitHub repository and download the latest release for your system under the \"Assets\" section at the bottom of the release.</p> <p>TagStudio has builds for Windows, macOS (Apple Silicon &amp; Intel), and Linux. We also offer portable releases for Windows and Linux which are self-contained and easier to move around.</p> <p>For macOS Users</p> <p>On macOS, you may be met with a message saying \"\"TagStudio\" can't be opened because Apple cannot check it for malicious software.\" If you encounter this, then you'll need to go to the \"Settings\" app, navigate to \"Privacy &amp; Security\", and scroll down to a section that says \"\"TagStudio\" was blocked from use because it is not from an identified developer.\" Click the \"Open Anyway\" button to allow TagStudio to run. You should only have to do this once after downloading the application.</p>"},{"location":"install/#package-managers","title":"Package Managers","text":"<p>Unofficial Releases</p> <p>We do not currently publish TagStudio to remote package repositories. Any TagStudio distributions outside of the GitHub repository are unofficial and not maintained by us!</p> <p>Installation support will not be given to users installing from unofficial sources. Use these versions at your own risk!</p>"},{"location":"install/#installing-with-pip","title":"Installing with PIP","text":"<p>TagStudio is installable via PIP. Note that since we don't currently distribute on PyPI, the repository needs to be cloned and installed locally. Make sure you have Python 3.12 and PIP installed if you choose to install using this method.</p> <p>The repository can be cloned/downloaded via <code>git</code> in your terminal, or by downloading the zip file from the \"Code\" button on the repository page.</p> <pre><code>git clone https://github.com/TagStudioDev/TagStudio.git\n</code></pre> <p>Once cloned or downloaded, you can install TagStudio with the following PIP command:</p> <pre><code>pip install .\n</code></pre> <p>Developer Dependencies</p> <p>If you wish to create an editable install with the additional dependencies required for developing TagStudio, use this modified PIP command instead: <pre><code>pip install -e .[dev]\n</code></pre> See more under \"Creating a Development Environment\"</p> <p>TagStudio can now be launched via the <code>tagstudio</code> command in your terminal.</p>"},{"location":"install/#linux","title":"Linux","text":"<p>Some external dependencies are required for TagStudio to execute. Below is a table of known packages that will be necessary.</p> Package Reason dbus required for Qt; opening desktop applications ffmpeg audio/video playback libstdc++ required for Qt libva hardware rendering with VAAPI libvdpau hardware rendering with VDPAU libx11 required for Qt libxcb-cursor OR xcb-util-cursor required for Qt libxkbcommon required for Qt libxrandr hardware rendering pipewire PipeWire audio support qt required qt-multimedia required qt-wayland Wayland support"},{"location":"install/#nixos","title":"Nix(OS)","text":"<p>For Nix(OS), the TagStudio repository includes a flake that provides some outputs such as a development shell and package.</p> <p>Two packages are provided: <code>tagstudio</code> and <code>tagstudio-jxl</code>. The distinction was made because <code>tagstudio-jxl</code> has an extra compilation step for JPEG-XL image support. To give either of them a test run, you can execute <code>nix run github:TagStudioDev/TagStudio#tagstudio</code>. If you are in a cloned repository and wish to run a package with the context of the repository, you can simply use <code>nix run</code> with no arguments.</p> <p><code>nix build</code> can be used in place of <code>nix run</code> if you only want to build. The packages will only build if tests pass.</p> <p>Nix Support</p> <p>Support for Nix is handled on a best-effort basis by one of our maintainers. Issues related to Nix may be slower to resolve, and could require further details.</p> <p>Want to add TagStudio into your configuration?</p> <p>This can be done by first adding the flake input into your <code>flake.nix</code>:</p> flake.nix<pre><code>{\n  inputs = {\n    nixpkgs.url = \"github:NixOS/nixpkgs/nixos-unstable\";\n\n    tagstudio = {\n      url = \"github:TagStudioDev/TagStudio\";\n      inputs.nixpkgs.follows = \"nixpkgs\"; # Use the same package set as your flake.\n    };\n  };\n}\n</code></pre> <p>Then, make sure you add the <code>inputs</code> context to your configuration:</p> NixOS with Home ManagerNixOSHome Manager (standalone) flake.nix<pre><code>{\n  outputs =\n    inputs@{ home-manager, nixpkgs, ... }:\n      {\n        nixosConfigurations.HOSTNAME = nixpkgs.lib.nixosSystem {\n          system = \"x86_64-linux\";\n\n          specialArgs = { inherit inputs; };\n          modules = [\n            ./configuration.nix\n\n            home-manager.nixosModules.home-manager\n            {\n              home-manager = {\n                useGlobalPkgs = true;\n                useUserPackages = true;\n\n                extraSpecialArgs = { inherit inputs; };\n                users.USER.imports = [\n                  ./home.nix\n                ];\n              };\n            }\n          ];\n        };\n      };\n}\n</code></pre> flake.nix<pre><code>{\n  outputs =\n    inputs@{ nixpkgs, ... }:\n      {\n        nixosConfigurations.HOSTNAME = nixpkgs.lib.nixosSystem {\n          system = \"x86_64-linux\";\n\n          specialArgs = { inherit inputs; };\n          modules = [\n            ./configuration.nix\n          ];\n        };\n      };\n}\n</code></pre> flake.nix<pre><code>{\n  outputs =\n    inputs@{ home-manager, nixpkgs, ... }:\n    let\n      pkgs = import nixpkgs {\n        system = \"x86_64-linux\";\n      };\n    in\n    {\n      homeConfigurations.USER = home-manager.lib.homeManagerConfiguration {\n        inherit pkgs;\n\n        extraSpecialArgs = { inherit inputs; };\n        modules = [\n          ./home.nix\n        ];\n      };\n    };\n}\n</code></pre> <p>Finally, <code>inputs</code> can be used in a module to add the package to your packages list:</p> Home Manager moduleNixOS module home.nix<pre><code>{ inputs, pkgs, ... }:\n\n{\n  home.packages = [\n    inputs.tagstudio.packages.${pkgs.stdenv.hostPlatform.system}.tagstudio\n  ];\n}\n</code></pre> configuration.nix<pre><code>{ inputs, pkgs, ... }:\n\n{\n  environment.systemPackages = [\n    inputs.tagstudio.packages.${pkgs.stdenv.hostPlatform.system}.tagstudio\n  ];\n}\n</code></pre> <p>Don't forget to rebuild!</p>"},{"location":"install/#creating-a-development-environment","title":"Creating a Development Environment","text":"<p>If you wish to develop for TagStudio, you'll need to create a development environment by installing the required dependencies. You have a number of options depending on your level of experience and familiarly with existing Python toolchains.</p> <p>Contributing</p> <p>If you wish to contribute to TagStudio's development, please read our CONTRIBUTING.md!</p>"},{"location":"install/#install-python","title":"Install Python","text":"<p>Python 3.12 is required to develop for TagStudio. Any version matching \"Python 3.12.x\" should work, with \"x\" being any number. Alternatively you can use a tool such as pyenv to install this version of Python without affecting any existing Python installations on your system.</p> <p>Python Aliases</p> <p>Depending on your system, Python may be called <code>python</code>, <code>py</code>, <code>python3</code>, or <code>py3</code>. These instructions use the alias <code>python</code> for consistency.</p> <p>If you already have Python installed on your system, you can check the version by running the following command:</p> <pre><code>python --version\n</code></pre>"},{"location":"install/#installing-with-pyenv","title":"Installing with pyenv","text":"<p>If you choose to install Python using pyenv, please refer to the following instructions:</p> <ol> <li>Follow pyenv's install instructions for your system.</li> <li>Install the appropriate Python version with pyenv by running <code>pyenv install 3.12</code> (This will not mess with your existing Python installation).</li> <li>Navigate to the repository root folder in your terminal and run <code>pyenv local 3.12</code>. You could alternatively use <code>pyenv shell 3.12</code> or <code>pyenv global 3.12</code> instead to set the Python version for the current terminal session or the entire system respectively, however using <code>local</code> is recommended.</li> </ol>"},{"location":"install/#installing-dependencies","title":"Installing Dependencies","text":"<p>To install the required dependencies, you can use a dependency manager such as uv or Poetry 2.0. Alternatively you can create a virtual environment and manually install the dependencies yourself.</p>"},{"location":"install/#installing-with-uv","title":"Installing with uv","text":"<p>If using uv, you can install the dependencies for TagStudio with the following command:</p> <pre><code>uv pip install -e .[dev]\n</code></pre>"},{"location":"install/#installing-with-poetry","title":"Installing with Poetry","text":"<p>If using Poetry, you can install the dependencies for TagStudio with the following command:</p> <pre><code>poetry install --with dev\n</code></pre>"},{"location":"install/#installing-with-nix","title":"Installing with Nix","text":"<p>If using Nix, there is a development environment already provided in the flake that is accessible with the following command:</p> <pre><code>nix develop\n</code></pre> <p>You can automatically enter this development shell, and keep your user shell, with a tool like direnv. A reference <code>.envrc</code> is provided in the repository; to use it:</p> <pre><code>ln -s .envrc.recommended .envrc\n</code></pre> <p>You will have to allow usage of it.</p> <p><code>.envrc</code> Security</p> <p>These files are generally a good idea to check, as they execute commands on directory load. direnv has a security framework to only run <code>.envrc</code> files you have allowed, and does keep track on if it has changed. So, with that being said, the file may need to be allowed again if modifications are made.</p> <pre><code>cat .envrc # You are checking them, right?\ndirenv allow\n</code></pre>"},{"location":"install/#manual-installation","title":"Manual Installation","text":"<p>If you choose to manually set up a virtual environment and install dependencies instead of using a dependency manager, please refer to the following instructions:</p> <p>Virtual Environments</p> <p>Learn more about setting up a virtual environment with Python's official tutorial.</p> <ol> <li> <p>In the root repository directory, create a python virtual environment:</p> <pre><code>python -m venv .venv\n</code></pre> </li> <li> <p>Activate your environment:</p> <ul> <li>Windows w/Powershell: <code>.venv\\Scripts\\Activate.ps1</code></li> <li>Windows w/Command Prompt: <code>.venv\\Scripts\\activate.bat</code></li> <li>Linux/macOS: <code>source .venv/bin/activate</code></li> </ul> <p>Supported Shells</p> <p>Depending on your system, the regular activation script might not work on alternative shells. In this case, refer to the table below for supported shells:</p> Shell Script Bash/ZSH <code>.venv/bin/activate</code> Fish <code>.venv/bin/activate.fish</code> CSH/TCSH <code>.venv/bin/activate.csh</code> PowerShell <code>.venv/bin/activate.ps1</code> </li> <li> <p>Use the following PIP command to create an editable installation and install the required development dependencies:</p> <pre><code>pip install -e .[dev]\n</code></pre> </li> </ol>"},{"location":"install/#launching","title":"Launching","text":"<p>The entry point for TagStudio is <code>src/tagstudio/main.py</code>. You can target this file from your IDE to run or connect a debug session. The example(s) below show off example launch scripts for different IDEs. Here you can also take advantage of launch arguments to pass your own test libraries to use while developing.</p> VS Code .vscode/launch.json<pre><code>{\n    // Use IntelliSense to learn about possible attributes.\n    // Hover to view descriptions of existing attributes.\n    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"TagStudio\",\n            \"type\": \"python\",\n            \"request\": \"launch\",\n            \"program\": \"${workspaceRoot}/src/tagstudio/main.py\",\n            \"console\": \"integratedTerminal\",\n            \"justMyCode\": true,\n            \"args\": [\"-o\", \"~/Documents/Example\"]\n        }\n    ]\n}\n</code></pre>"},{"location":"install/#building","title":"Building","text":"<p>To build your own executables of TagStudio, first follow the steps in \"Installing with PIP\" including the developer dependencies step. Once that's complete, run the following PyInstaller command:</p> <pre><code>pyinstaller tagstudio.spec\n</code></pre> <p>If you're on Windows or Linux and wish to build a portable executable, then pass the following flag:</p> <pre><code>pyinstaller tagstudio.spec -- --portable\n</code></pre> <p>The resulting executable file(s) will be located in a new folder named \"dist\".</p>"},{"location":"install/#third-party-dependencies","title":"Third-Party Dependencies","text":"<p>For audio/video thumbnails and playback you'll also need FFmpeg installed on your system. If you encounter any issues with this, please reference our FFmpeg Help guide.</p> <p>You can check to see if FFmpeg and FFprobe are correctly located by launching TagStudio and going to \"About TagStudio\" in the menu bar.</p>"},{"location":"install/#launch-arguments","title":"Launch Arguments","text":"<p>There are a handful of launch arguments you can pass to TagStudio via the command line or a desktop shortcut.</p> Argument Short Description <code>--open &lt;path&gt;</code> <code>-o</code> Path to a TagStudio Library folder to open on start. <code>--config-file &lt;path&gt;</code> <code>-c</code> Path to the TagStudio config file to load."},{"location":"usage/","title":"Usage","text":""},{"location":"usage/#creatingopening-a-library","title":"Creating/Opening a Library","text":"<p>With TagStudio opened, start by creating a new library or opening an existing one using File -&gt; Open/Create Library from the menu bar. TagStudio will automatically create a new library from the chosen directory if one does not already exist. Upon creating a new library, TagStudio will automatically scan your folders for files and add those to your library (no files are moved during this process!).</p>"},{"location":"usage/#refreshing-the-library","title":"Refreshing the Library","text":"<p>Libraries under 10,000 files automatically scan for new or modified files when opened. In order to refresh the library manually, select \"Refresh Directories\" under the File menu.</p>"},{"location":"usage/#adding-tags-to-file-entries","title":"Adding Tags to File Entries","text":"<p>Access the \"Add Tag\" search box by either clicking on the \"Add Tag\" button at the bottom of the right sidebar, accessing the \"Add Tags to Selected\" option from the File menu, or by pressing Ctrl+Shift+T.</p> <p>From here you can search for existing tags or create a new one if the one you're looking for doesn't exist. Click the \"+\" button next to any tags you want to the currently selected file entries. To quickly add the top result, press the Enter/Return key to add the the topmost tag and reset the tag search. Press Enter/Return once more to close the dialog box. By using this method, you can quickly add various tags in quick succession just by using the keyboard!</p> <p>To remove a tag from a file entry, hover over the tag in the preview panel and click on the \"-\" icon that appears.</p>"},{"location":"usage/#adding-metadata-to-file-entries","title":"Adding Metadata to File Entries","text":"<p>To add a metadata field to a file entry, start by clicking the \"Add Field\" button at the bottom of the preview panel. From the dropdown menu, select the type of metadata field you\u2019d like to add to the entry</p>"},{"location":"usage/#editing-metadata-fields","title":"Editing Metadata Fields","text":""},{"location":"usage/#text-line-text-box","title":"Text Line / Text Box","text":"<p>Hover over the field and click the pencil icon. From there, add or edit text in the dialog box popup.</p>"},{"location":"usage/#creating-tags","title":"Creating Tags","text":"<p>Create a new tag by accessing the \"New Tag\" option from the Edit menu or by pressing Ctrl+T. In the tag creation panel, enter a tag name, optional shorthand name, optional tag aliases, optional parent tags, and an optional color.</p> <ul> <li>The tag name is the base name of the tag. This does NOT have to be unique!</li> <li>The tag shorthand is a special type of alias that displays in situations where screen space is more valuable, notably with name disambiguation.</li> <li>Aliases are alternate names for a tag. These let you search for terms other than the exact tag name in order to find the tag again.</li> <li>Parent Tags are tags in which this tag can substitute for in searches. In other words, tags under this section are parents of this tag.<ul> <li>Parent tags with the disambiguation check next to them will be used to help disambiguate tag names that may not be unique.</li> <li>For example: If you had a tag for \"Freddy Fazbear\", you might add \"Five Nights at Freddy's\" as one of the parent tags. If the disambiguation box is checked next to \"Five Nights at Freddy's\" parent tag, then the tag \"Freddy Fazbear\" will display as \"Freddy Fazbear (Five Nights at Freddy's)\". Furthermore, if the \"Five Nights at Freddy's\" tag has a shorthand like \"FNAF\", then the \"Freddy Fazbear\" tag will display as \"Freddy Fazbear (FNAF)\".</li> </ul> </li> <li>The color option lets you select an optional color palette to use for your tag.</li> <li>The \"Is Category\" property lets you treat this tag as a category under which itself and any child tags inheriting from it will be sorted by inside the preview panel.</li> </ul>"},{"location":"usage/#tag-manager","title":"Tag Manager","text":"<p>You can manage your library of tags from opening the \"Tag Manager\" panel from Edit -&gt; \"Manage Tags\". From here you can create, search for, edit, and permanently delete any tags you've created in your library.</p>"},{"location":"usage/#editing-tags","title":"Editing Tags","text":"<p>To edit a tag, click on it inside the preview panel or right-click the tag and select \"Edit Tag\" from the context menu.</p>"},{"location":"usage/#relinking-moved-files","title":"Relinking Moved Files","text":"<p>Inevitably some of the files inside your library will be renamed, moved, or deleted. If a file has been renamed or moved, TagStudio will display the thumbnail as a red broken chain link. To relink moved files or delete these entries, select the \"Manage Unlinked Entries\" option under the Tools menu. Click the \"Refresh\" button to scan your library for unlinked entries. Once complete, you can attempt to \"Search &amp; Relink\" any unlinked file entries to their respective files, or \"Delete Unlinked Entries\" in the event the original files have been deleted and you no longer wish to keep their entries inside your library.</p> <p>Warning</p> <p>There is currently no method to relink entries to files that have been renamed - only moved or deleted. This is a high priority for future releases.</p> <p>Warning</p> <p>If multiple matches for a moved file are found (matches are currently defined as files with a matching filename as the original), TagStudio will currently ignore the match groups. Adding a GUI for manual selection, as well as smarter automated relinking, are high priorities for future versions.</p>"},{"location":"usage/#saving-the-library","title":"Saving the Library","text":"<p>As of version 9.5, libraries are saved automatically as you go. To save a backup of your library, select File -&gt; Save Library Backup from the menu bar.</p>"},{"location":"help/ffmpeg/","title":"FFmpeg","text":"<p>FFmpeg is required for thumbnail previews and playback features on audio and video files. FFmpeg is a free Open Source project dedicated to the handling of multimedia (video, audio, etc) files. For more information, see their official website at ffmpeg.org.</p>"},{"location":"help/ffmpeg/#installation-on-windows","title":"Installation on Windows","text":""},{"location":"help/ffmpeg/#prebuilt-binaries","title":"Prebuilt Binaries","text":"<p>Pre-built binaries from trusted sources are available on the FFmpeg website. Under \"More downloading options\" click on the Windows section, then under \"Windows EXE Files\" select a source to download a build from. Follow any further download instructions from whichever build website you choose.</p> <p></p> <p>Warning</p> <p>Do NOT download the source code by mistake!</p> <p>To Install:</p> <ol> <li>Download 7z or zip file and extract it (right click &gt; Extract All)</li> <li>Move extracted contents to a unique folder (i.e; <code>c:\\ffmpeg</code> or <code>c:\\Program Files\\ffmpeg</code>)</li> <li> <p>Add FFmpeg to your system PATH</p> <ol> <li>In Windows, search for or go to \"Edit the system environment variables\" under the Control Panel</li> <li>Under \"User Variables\", select \"Path\" then edit</li> <li>Click new and add <code>&lt;Your folder&gt;\\bin</code> (e.g; <code>c:\\ffmpeg\\bin</code> or <code>c:\\Program Files\\ffmpeg\\bin</code>)</li> <li>Click \"Okay\"</li> </ol> </li> </ol>"},{"location":"help/ffmpeg/#package-managers","title":"Package Managers","text":"<p>FFmpeg is also available from:</p> <ol> <li>WinGet (<code>winget install ffmpeg</code>)</li> <li>Scoop (<code>scoop install main/ffmpeg</code>)</li> <li>Chocolatey (<code>choco install ffmpeg-full</code>)</li> </ol>"},{"location":"help/ffmpeg/#installation-on-mac","title":"Installation on Mac","text":""},{"location":"help/ffmpeg/#homebrew","title":"Homebrew","text":"<p>FFmpeg is available under the macOS section of the FFmpeg website or can be installed via Homebrew using <code>brew install ffmpeg</code>.</p>"},{"location":"help/ffmpeg/#installation-on-linux","title":"Installation on Linux","text":""},{"location":"help/ffmpeg/#package-managers_1","title":"Package Managers","text":"<p>FFmpeg may be installed by default on some Linux distributions, but if not, it is available via your distribution package manager of choice:</p> <ol> <li>Debian/Ubuntu (<code>sudo apt install ffmpeg</code>)</li> <li>Fedora (<code>sudo dnf install ffmpeg-free</code>)</li> <li>Arch (<code>sudo pacman -S ffmpeg</code>)</li> </ol>"},{"location":"help/ffmpeg/#help","title":"Help","text":"<p>For additional help, please join the Discord or create an Issue on the GitHub repository</p>"},{"location":"library/","title":"Library","text":"<p>The library is how TagStudio represents your chosen directory, with every file inside being represented by a file entry. You can have as many or few libraries as you wish, since each libraries' data is stored within a <code>.TagStudio</code> folder at its root. From there the library save file itself is stored as <code>ts_library.sqlite</code>, with TagStudio versions 9.4 and below using a the legacy <code>ts_library.json</code> format.</p> <p>Note that this means tags you create only exist per-library.</p>"},{"location":"library/entry/","title":"File Entries","text":"<p>File entries are the individual representations of your files inside a TagStudio library. Each one corresponds one-to-one to a file on disk, and tracks all of the additional tags and metadata that you attach to it inside TagStudio.</p>"},{"location":"library/entry/#storage","title":"Storage","text":"<p>File entry data is storied within the <code>ts_library.sqlite</code> file inside each library's <code>.TagStudio</code> folder. No modifications are made to your actual files on disk, and nothing like sidecar files are generated for your files.</p>"},{"location":"library/entry/#appearance","title":"Appearance","text":"<p>File entries appear as file previews both inside the thumbnail grid. The preview panel shows a more detailed preview of the file, along with extra file stats and all attached TagStudio tags and fields.</p>"},{"location":"library/entry/#unlinked-file-entries","title":"Unlinked File Entries","text":"<p>If the file that an entry is referencing has been moved, renamed, or deleted on disk, then TagStudio will display a red chain-link icon for the thumbnail image. Certain uncached stats such as the file size and image dimensions will also be unavailable to see in the preview panel when a file becomes unlinked.</p> <p>To fix file entries that have become unlinked, select the \"Fix Unlinked Entries\" option from the Tools menu. From there, refresh the unlinked entry count and choose whether to search and relink you files, and/or delete the file entries from your library. This will NOT delete or modify any files on disk.</p>"},{"location":"library/entry/#internal-structure","title":"Internal Structure","text":"<ul> <li><code>id</code> (<code>INTEGER</code>/<code>int</code>, <code>UNIQUE</code>, <code>NOT NULL</code>, <code>PRIMARY KEY</code>)<ul> <li>The ID for the file entry.</li> <li>Used for guaranteed unique references.</li> </ul> </li> <li><code>folder</code> (<code>INTEGER</code>/<code>int</code>, <code>NOT NULL</code>, <code>FOREIGN KEY</code>)<ul> <li>Not currently used, may be removed.</li> </ul> </li> <li><code>path</code> (<code>VARCHAR</code>/<code>Path</code>, <code>UNIQUE</code>, <code>NOT NULL</code>)<ul> <li>The filename and filepath relative to the root of the library folder.</li> <li>(E.g. for library \"Folder\", path = \"any_subfolders/filename.txt\")</li> </ul> </li> <li><code>suffix</code> (<code>VARCHAR</code>/<code>str</code>, <code>NOT NULL</code>)<ul> <li>The filename suffix with no leading dot.</li> <li>Used for quicker file extension checks.</li> </ul> </li> <li><code>date_created</code> (<code>DATETIME</code>/<code>Datetime</code>)<ul> <li>Not currently used, will be implemented in an upcoming update.</li> <li>The creation date of the file (not the entry).</li> <li>Generates from <code>st_birthtime</code> on Windows and Mac, and <code>st_ctime</code> on Linux.</li> </ul> </li> <li><code>date_modified</code> (<code>DATETIME</code>/<code>Datetime</code>)<ul> <li>Not currently used, will be implemented in an upcoming update.</li> <li>The latest modification date of the file (not the entry).</li> <li>Generates from <code>st_mtime</code>.</li> </ul> </li> <li><code>date_added</code> (<code>DATETIME</code>/<code>Datetime</code>)<ul> <li>The date the file entry was added to the TagStudio library.</li> </ul> </li> </ul>"},{"location":"library/entry/#table-relationships","title":"Table Relationships","text":"<ul> <li><code>tag_entries</code><ul> <li>A relationship between <code>entry_id</code> to <code>tag_id</code>s from the <code>tags</code> table.</li> </ul> </li> <li><code>text_fields</code><ul> <li>(TODO: determine the relationship for <code>entry_id</code>)</li> </ul> </li> <li><code>datetime_fields</code><ul> <li>(TODO: determine the relationship for <code>entry_id</code>)</li> </ul> </li> </ul>"},{"location":"library/entry_groups/","title":"Entry Groups","text":"<p>Entries can be grouped via tags marked as \"groups\" which when applied to different entries will signal TagStudio to treat those entries as a single group inside of searches and browsing.</p>","tags":["Upcoming Feature"]},{"location":"library/field/","title":"Fields","text":"<p>Fields are additional types of metadata that you can attach to file entries. Like tags, fields are not stored inside files themselves nor in sidecar files, but rather inside the respective TagStudio library save file.</p>"},{"location":"library/field/#field-types","title":"Field Types","text":""},{"location":"library/field/#text-line","title":"Text Line","text":"<p>A string of text, displayed as a single line.</p> <ul> <li>e.g: Title, Author, Artist, URL, etc.</li> </ul>"},{"location":"library/field/#text-box","title":"Text Box","text":"<p>A long string of text displayed as a box of text.</p> <ul> <li>e.g: Description, Notes, etc.</li> </ul>"},{"location":"library/field/#datetime-wip","title":"Datetime [WIP]","text":"<p>A date and time value.</p> <ul> <li>e.g: Date Published, Date Taken, etc.</li> </ul>"},{"location":"library/library_search/","title":"Library Search","text":"<p>TagStudio provides various methods to search your library, ranging from TagStudio data such as tags to inherent file data such as paths or media types.</p>"},{"location":"library/library_search/#boolean-operators","title":"Boolean Operators","text":"<p>TagStudio allows you to use common Boolean search operators when searching your library, along with grouping, nesting, and character escaping. Note that you may need to use grouping in order to get the desired results you're looking for.</p>"},{"location":"library/library_search/#and","title":"AND","text":"<p>The <code>AND</code> operator will only return results that match both sides of the operator. <code>AND</code> is used implicitly when no Boolean operators are given. To use the <code>AND</code> operator explicitly, simply type \"and\" (case insensitive) in-between items of your search.</p> <p>Example</p> <p>Searching for \"Tag1 Tag2\" will be treated the same as \"Tag1 <code>AND</code> Tag2\" and will only return results that contain both Tag1 and Tag2.</p>"},{"location":"library/library_search/#or","title":"OR","text":"<p>The <code>OR</code> operator will return results that match either the left or right side of the operator. To use the <code>OR</code> operator simply type \"or\" (case insensitive) in-between items of your search.</p> <p>Example</p> <p>Searching for \"Tag1 <code>OR</code> Tag2\" will return results that contain either \"Tag1\", \"Tag2\", or both.</p>"},{"location":"library/library_search/#not","title":"NOT","text":"<p>The <code>NOT</code> operator will returns results where the condition on the right is false. To use the <code>NOT</code> operator simply type \"not\" (case insensitive) in-between items of your search. You can also begin your search with <code>NOT</code> to only view results that do not contain the next term that follows.</p> <p>Example</p> <p>Searching for \"Tag1 <code>NOT</code> Tag2\" will only return results that contain \"Tag1\" while also not containing \"Tag2\".</p>"},{"location":"library/library_search/#grouping-and-nesting","title":"Grouping and Nesting","text":"<p>Searches can be grouped and nested by using parentheses to surround parts of your search query.</p> <p>Example</p> <p>Searching for \"(Tag1 <code>OR</code> Tag2) <code>AND</code> Tag3\" will return results any results that contain Tag3, plus one or the other (or both) of Tag1 and Tag2.</p>"},{"location":"library/library_search/#escaping-characters","title":"Escaping Characters","text":"<p>Sometimes search queries have ambiguous characters and need to be \"escaped\". This is most common with tag names which contain spaces, or overlap with existing search keywords such as \"path: of exile\". To escape most search terms, surround the section of your search in plain quotes. Alternatively, spaces in tag names can be replaced by underscores.</p>"},{"location":"library/library_search/#valid-escaped-tag-searches","title":"Valid Escaped Tag Searches","text":"<ul> <li>\"Tag Name With Spaces\"</li> <li>Tag_Name_With_Spaces</li> </ul>"},{"location":"library/library_search/#invalid-escaped-tag-searches","title":"Invalid Escaped Tag Searches","text":"<ul> <li>Tag Name With Spaces<ul> <li>Reason: Ambiguity between a tag named \"Tag Name With Spaces\" and four individual tags called \"Tag\", \"Name\", \"With\", \"Spaces\".</li> </ul> </li> </ul>"},{"location":"library/library_search/#tags","title":"Tags","text":"<p>Tag search is the default mode of file entry search in TagStudio. No keyword prefix is required, however using <code>tag:</code> will also work. The tag search attempts to match tag names, shorthands, aliases, as well as allows for tags to substitute in for any of their parent tags.</p> <p>You may also see the <code>tag_id:</code> prefix keyword show up with using the right-click \"Search for Tag\" option on tags. This is meant for internal use, and eventually will not be displayed or accessible to the user.</p>"},{"location":"library/library_search/#fields","title":"Fields","text":"<p>Field search is currently not in the program, however is coming in a future version.</p>"},{"location":"library/library_search/#file-entry-search","title":"File Entry Search","text":""},{"location":"library/library_search/#filename-and-path","title":"Filename and Path","text":"<p>Filename and path search is available via the <code>path:</code> keyword and comes in a few different styles. By default, any string that follows the <code>path:</code> keyword will be searched as a substring inside a file's complete filepath. This means that given a file <code>folder/my_file.txt</code>, searching for <code>path: my_file</code> or <code>path: folder</code> will both return results for that file.</p>"},{"location":"library/library_search/#case-sensitivity","title":"Case Sensitivity","text":"<p>TagStudio uses a \"smartcase\"-like system for case sensitivity. This means that a search term typed in <code>lowercase</code> will be treated as case-insensitive, while a term typed in any <code>MixedCase</code> will be treated as case-sensitive. This makes it quicker to type searches when case sensitivity isn't required, while also providing a simple option to leverage case sensitivity when desired. Note that this means there's technically no way to currently search for a lowercase term while respecting case sensitivity.</p>"},{"location":"library/library_search/#glob-syntax","title":"Glob Syntax","text":"<p>Optionally, you may use glob syntax to search filepaths.</p>"},{"location":"library/library_search/#examples","title":"Examples","text":"<p>Given a file \"Artwork/Piece.jpg\", the following searches will return results for it:</p> <ul> <li><code>path: artwork/piece.jpg</code></li> <li><code>path: Artwork/Piece.jpg</code></li> <li><code>path: piece.jpg</code></li> <li><code>path: Piece.jpg</code></li> <li><code>path: artwork</code></li> <li><code>path: rtwor</code></li> <li><code>path: ece.jpg</code></li> <li><code>path: iec</code></li> <li><code>path: artwork/*</code></li> <li><code>path: Artwork/*</code></li> <li><code>path: *piece.jpg*</code></li> <li><code>path: *Piece.jpg*</code></li> <li><code>path: *artwork*</code></li> <li><code>path: *Artwork*</code></li> <li><code>path: *rtwor*</code></li> <li><code>path: *ece.jpg*</code></li> <li><code>path: *iec*</code></li> <li><code>path: *.jpg</code></li> </ul> <p>While the following searches will NOT:</p> <ul> <li><code>path: ARTWORK/Piece.jpg</code> (Reason: Mismatched case)</li> <li><code>path: *aRtWoRk/Piece*</code> (Reason: Mismatched case)</li> <li><code>path: PieCe.jpg</code> (Reason: Mismatched case)</li> <li><code>path: *PieCe.jpg*</code> (Reason: Mismatched case)</li> </ul>"},{"location":"library/library_search/#special-searches","title":"Special Searches","text":"<p>Some predefined searches use the <code>special:</code> keyword prefix and give quick results for certain special search queries.</p>"},{"location":"library/library_search/#untagged","title":"Untagged","text":"<p>To see all your file entries which don't contain any tags, use the <code>special: untagged</code> search.</p>"},{"location":"library/library_search/#empty","title":"Empty","text":"<p>NOTE: Currently unavailable in v9.5.0</p> <p>To see all your file entries which don't contain any tags and any fields, use the <code>special: empty</code> search.</p>"},{"location":"library/tag/","title":"Tags","text":"<p>Tags are discrete objects that represent some attribute. This could be a person, place, object, concept, and more. Unlike most tagging systems, TagStudio tags are not solely represented by a line of text or a hashtag. Tags in TagStudio consist of several properties and relationships that give extra customization, searching power, and ease of tagging that cannot be achieved by string-based tags alone. TagStudio tags are designed to be as simple or as complex as you'd like, giving options to users of all skill levels and use cases.</p>"},{"location":"library/tag/#naming-tags","title":"Naming Tags","text":"<p>TagStudio tags do not share the same naming limitations of many other tagging solutions. The key standouts of tag names in TagStudio are:</p> <ul> <li>Tag names do NOT have to be unique</li> <li>Tag names are NOT limited to specific characters</li> <li>Tags can have aliases, a.k.a. alternate names to go by</li> </ul>"},{"location":"library/tag/#name","title":"Name","text":"<p>This is the base name of a tag. It does not have to be unique, and can use any characters you wish. If your tag can go by multiple names, for example if it's the name of a person or something that's commonly shortened or abbreviated, then it's recommended that you put the full tag name here.</p>"},{"location":"library/tag/#shorthand","title":"Shorthand","text":"<p>This is a special type of alias that's used for shortening the tag name under special circumstances, mostly when screen space is limited. Tag shorthands can be searched for just like tag names and tag aliases.</p>"},{"location":"library/tag/#aliases","title":"Aliases","text":"<p>Aliases are alternate names that the tag can go by. This may include individual first names for people, alternate spellings, shortened names, and more. If there's a common abbreviation or shortened name for your tag, it's recommended to use the shorthand field for this instead.</p> <p>When searching for a tag, aliases (including the shorthand) can also be used to find the tag. This not only includes searching for tags themselves, but for tagged file entries as well!</p>"},{"location":"library/tag/#automatic-disambiguation","title":"Automatic Disambiguation","text":"<p>Just as in real life, sometimes there are different attributes that share the same name with one another. The process of adding specificity to something in order to not confuse it with something similar is known as disambiguation. In TagStudio we give the option to automatically disambiguate tag names based on a specially marked Parent Tag. Parent tags are explained in further detail below, but for the purposes of tag names they can lend themselves to clarifying the name of a tag without the user needing to manually change the name or add complicated aliases.</p> <p>Given a tag named \"Freddy\", we may confuse it with other \"Freddy\" tags in our library. There are lots of Freddys in the world, after all. If we're talking about Freddy from \"Five Nights at Freddy's\", then we may already (and likely should) have a separate \"Five Nights at Freddy's\" tag added as a parent tag. When the disambiguation box next to a parent tag is selected (see image below) then our tag name will automatically display its name with that parent tag's name (or shorthand if available) in parentheses.</p> <p></p> <p>So if the \"Five Night's at Freddy's\" tag is added as a parent tag on the \"Freddy\" tag, and the disambiguation box next to it is checked, then our tag name will automatically be displayed as \"Freddy (Five Nights at Freddy's)\". Better yet, if the \"Five Night's at Freddy's\" tag has a shorthand such as \"FNAF\", then our \"Freddy\" tag will be displayed as \"Freddy (FNAF)\". This process preserves our base tag name (\"Freddy\") and provides an option to get a clean and consistent method to display disambiguating parent categories, rather than having to type this information in manually for each applicable tag.</p>"},{"location":"library/tag/#tag-relationships","title":"Tag Relationships","text":"<p>One of the core properties of tags in TagStudio is their ability to form relationships with other tags, just as attributes have relationships with each other in real life. A rectangle is a square, but a square isn't a rectangle. A certain plumber with a red hat and blue overalls might be part of a well-known media franchise, developed by an equally well-known company. But how do representing these relationships help with tagging images and files? With tag relationships, we can leverage the following principles:</p> <ol> <li>Simplicity via Deduplication</li> <li>Intuition via Substitution</li> <li>Rediscovery via Linking</li> </ol>"},{"location":"library/tag/#parent-tags","title":"Parent Tags","text":""},{"location":"library/tag/#simplicity-via-deduplication","title":"Simplicity via Deduplication","text":"<p>In a system where tags have no relationships, you're required to add as many tags as you possibly can to describe every last element of an image or file. If you want to tag an image of Shrek, you need to add a tag for <code>Shrek</code> himself, a <code>Character</code> tag since he's a character, a <code>Movie</code> and perhaps <code>Dreamworks</code> tag since he's a character from a movie, or perhaps a <code>Book</code> tag if we're talking about the original character, and then of course tags for every other attribute of Shrek shown or implied. By allowing tags to have inheritance relationships, we can have a single <code>Shrek</code> tag inherit from <code>Character</code> (Shrek IS a character) as well as from a separate <code>Shrek (Movie Franchise)</code> tag that itself inherits from <code>Movie Franchise</code> and <code>Dreamworks</code>. Now by simply adding the <code>Shrek</code> tag to an image, we've effectively also added the <code>Character</code>, <code>Shrek (Move Franchise)</code>, <code>Movie Franchise</code>, and <code>Dreamworks</code> attributes all in one go. On the image entry itself we only see <code>Shrek</code>, but the rest of the attributes are implied.</p> <p></p>"},{"location":"library/tag/#intuition-via-substitution","title":"Intuition via Substitution","text":"<p>Now when searching for images that have <code>Dreamworks</code> and <code>Character</code>, any images or files originally just tagged with <code>Shrek</code> will appear as you would expect. A little bit of tag setup goes a long way not only saving so much time during tagging, but also to ensure an intuitive way to search your files!</p>"},{"location":"library/tag/#rediscovery-via-linking","title":"Rediscovery via Linking","text":"<p>Lastly, when searching your files with broader categories such as <code>Character</code> or <code>Dreamworks</code> you may rediscover images and files that you had simply tagged with tags such as <code>Barbatus</code> or <code>Tulio</code>, since you didn't need to manually tag those files with <code>Character</code> or <code>Dreamworks</code>, but had forgotten that they are both in fact Dreamworks characters. While you focus on tagging your files with seemingly surface level attributes, your TagStudio library is building rich connections between tags and files that may not be fully apparent until being discovered through various search queries. While you were simply tagging images with <code>Shrek</code> and <code>Tulio</code>, you may have unlocked an easy way to search for \"2D Dreamworks Characters\" without having to explicitly tag for that!</p>"},{"location":"library/tag/#component-tags","title":"Component Tags","text":"<p>Coming in version 9.6</p> <p>Component tags will be built from a composition-based, or \"HAS\" type relationship between tags. This takes care of instances where an attribute may \"have\" another attribute, but doesn't inherit from it. Shrek may be an <code>Orge</code>, he may be a <code>Character</code>, but he is NOT a <code>Leather Vest</code> - even if he's commonly seen with it. Component tags, along with the upcoming Tag Override feature, are built to handle these cases in a way that still simplifies the tagging process without adding too much undue complexity for the user.</p>"},{"location":"library/tag/#tag-appearance","title":"Tag Appearance","text":""},{"location":"library/tag/#color","title":"Color","text":"<p>Tags use a default uncolored appearance by default, however can take on a number of built-in and user-created colors and color palettes! Tag color palettes can be based on a single color value (see: TagStudio Standard, TagStudio Shades, TagStudio Pastels) or use an optional secondary color use for the text and optionally the tag border (e.g. TagStudio Neon).</p> <p></p>"},{"location":"library/tag/#user-created-colors","title":"User-Created Colors","text":"<p>Custom palettes and colors can be created via the Tag Color Manager. These colors will display alongside the built-in colors inside the tag selection window and are separated by their namespace names. Colors which use the secondary color for the tag border will be outlined in that color, otherwise they will only display the secondary color on the bottom of the swatch to indicate at a glance that the text colors are different.</p> <p></p>"},{"location":"library/tag/#icon","title":"Icon","text":"<p>Coming in version 9.6</p>"},{"location":"library/tag/#tag-properties","title":"Tag Properties","text":"<p>Properties are special attributes of tags that change their behavior in some way.</p>"},{"location":"library/tag/#is-category","title":"Is Category","text":"<p>When the \"Is Category\" property is checked, this tag now acts as a category separator inside the preview panel. If this tag or any tags inheriting from this tag (i.e. tags that have this tag as a \"Parent Tag\"), then these tags will appear under a separated group that's named after this tag. Tags inheriting from multiple \"category tags\" will still show up under any applicable category. Read more under: Tag Categories.</p> <p></p>"},{"location":"library/tag/#is-hidden","title":"Is Hidden","text":"<p>Coming in version 9.6</p> <p>When the \"Is Hidden\" property is checked, any file entries tagged with this tag will not show up in searches by default. This property comes by default with the built-in \"Archived\" tag.</p>"},{"location":"library/tag/#tag-search-examples","title":"Tag Search Examples","text":"<p>The following are examples of how a set of given tags will respond to various search queries.</p> Tag Name Shorthand Aliases Parent Tags League of Legends \"League of Legends\" \"LoL\" [\"League\"] [\"Game\", \"Fantasy\"] Arcane \"Arcane\" \"\" [] [\"League of Legends\", \"Cartoon\"] Jinx (LoL) \"Jinx Piltover\" \"Jinx\" [\"Jinxy\", \"Jinxy Poo\"] [\"League of Legends\", \"Arcane\", \"Character\"] Zander (Arcane) \"Zander Zanderson\" \"Zander\" [] [\"Arcane\", \"Character\"] Mr. Legend (LoL) \"Mr. Legend\" \"\" [] [\"League of Legends\", \"Character\"] <p>The query \"Arcane\" will display results tagged with:</p> Tag Cause of Inclusion Tag Tree Lineage Arcane Direct match of tag name \"Arcane\" Jinx (LoL) Search term is set as parent tag \"Jinx (LoL) &gt; Arcane\" Zander (Arcane) Search term is set as parent tag \"Zander (Arcane) &gt; Arcane\" <p>The query \"League of Legends\" will display results tagged with:</p> Tag Cause of Inclusion Tag Tree Lineage League of Legends Direct match of tag name \"League of Legends\" Arcane Search term is set as parent tag \"Arcane &gt; League of Legends\" Jinx (LoL) Search term is set as parent tag \"Jinx (LoL) &gt; League of Legends\" Mr. Legend (LoL) Search term is set as parent tag \"Mr. Legend (LoL) &gt; League of Legends\" Zander (Arcane) Search term is a parent tag of a tag set as parent tag \"Zander (Arcane) &gt; Arcane &gt; League of Legends\" <p>Note: The query \"LoL\" will display the same results as the above example since \"LoL\" is the shorthand for \"League of Legends\".</p>"},{"location":"library/tag_categories/","title":"Tag Categories","text":"<p>The \"Is Category\" property of tags determines if a tag should be treated as a category itself when being organized inside the preview panel. Tags marked as categories will show themselves and all tags inheriting from it (including recursively) underneath a field-like section with the tag's name. This means that duplicates of tags can appear on entries if the tag inherits from multiple parent categories, however this is by design and reflects the nature multiple inheritance. Any tags not inheriting from a category tag will simply show under a default \"Tag\" section.</p> <p></p>"},{"location":"library/tag_categories/#built-in-tags-and-categories","title":"Built-In Tags and Categories","text":"<p>The built-in tags \"Favorite\" and \"Archived\" inherit from the built-in \"Meta Tags\" category which is marked as a category by default. This behavior of default tags can be fully customized by disabling the category option and/or by adding/removing the tags' Parent Tags.</p>"},{"location":"library/tag_categories/#migrating-from-v94-libraries","title":"Migrating from v9.4 Libraries","text":"<p>Due to the nature of how tags and Tag Felids operated prior to v9.5, the organization style of Tag Categories vs Tag Fields is not 1:1. Instead of tags being organized into fields on a per-entry basis, tags themselves determine their organizational layout via the \"Is Property\" flag. Any tags (not currently inheriting from either the \"Favorite\" or \"Archived\" tags) will be shown under the default \"Tags\" header upon migrating to the v9.5+ library format. Similar organization to Tag Fields can be achieved by using the built-in \"Meta Tags\" tag or any other marked with \"Is Category\" and then setting those tags as parents for other tags to inherit from.</p>"},{"location":"library/tag_color/","title":"Tag Colors","text":"<p>TagStudio features a variety of built-in tag colors, alongside the ability for users to create their own custom tag color palettes.</p>"},{"location":"library/tag_color/#tag-color-manager","title":"Tag Color Manager","text":"<p>The Tag Color Manager is where you can create and manage your custom tag colors and associated namespaces. To open the Tag Color Manager, go to \"File -&gt; Manage Tag Colors\" option in the menu bar.</p> <p></p>"},{"location":"library/tag_color/#creating-a-namespace","title":"Creating a Namespace","text":"<p>TagStudio uses namespaces to group colors into palettes. Namespaces are a way for you to use the same color name across multiple palettes without having to worry about name collision with other palettes. This is especially useful when sharing your color palettes with others!*</p> <p>* Color pack sharing coming in a future update</p> <p>To create your first namespace, either click the \"New Namespace\" button or the large button prompt underneath the built-in colors.</p> <p></p>"},{"location":"library/tag_color/#name","title":"Name","text":"<p>The display name of the namespace, used for presentation.</p>"},{"location":"library/tag_color/#id-slug","title":"ID Slug","text":"<p>An internal ID for the namespace which is automatically derived from the namespace name.</p> <p>Namespaces beginning with \"tagstudio\" are reserved by TagStudio and will automatically have their text changed.</p> <p>Note</p> <p>It's currently not possible to manually edit the Namespace ID Slug. This will be possible once sharable color packs are added.</p>"},{"location":"library/tag_color/#creating-a-color","title":"Creating a Color","text":"<p>Once you've created your first namespace, click the \"+\" button inside the namespace section to create a color. To edit a color that you've previously created, either click on the color name or right click and select \"Edit Color\" from the context menu.</p> <p></p>"},{"location":"library/tag_color/#name_1","title":"Name","text":"<p>The display name for the color, used for presentation. You may occasionally see the color name followed by the namespace name in parentheses to disambiguate it from other colors with the same name.</p>"},{"location":"library/tag_color/#id-slug_1","title":"ID Slug","text":"<p>Similar to Namespace ID Slugs, the ID Slug is used as an internal ID and is automatically derived from the tag color name.</p> <p>Note</p> <p>It's currently not possible to manually edit the Color ID Slug. This will be possible once sharable color packs are added.</p>"},{"location":"library/tag_color/#primary-color","title":"Primary Color","text":"<p>The primary color is used as the main tag color and by default is used as the background color with the text and border colors being derived from this color.</p>"},{"location":"library/tag_color/#secondary-color","title":"Secondary Color","text":"<p>By default, the secondary color is only used as an optional override for the tag text color. This color can be cleared by clicking the adjacent \"Reset\" button.</p> <p></p> <p>The secondary color can also be used as the tag border color by checking the \"Use Secondary Color for Border\" box.</p> <p></p>"},{"location":"library/tag_color/#using-colors","title":"Using Colors","text":"<p>When editing a tag, click the tag color button to bring up the tag color selection panel. From here you can choose any built-in TagStudio color as well as any of your custom colors.</p> <p></p>"},{"location":"library/tag_overrides/","title":"Tag Overrides","text":"<p>Tag overrides are the ability to add or remove parent tags from a tag on a per-entry basis.</p>","tags":["Upcoming Feature"]},{"location":"library/tag_overrides/#examples","title":"Examples","text":"Ex. 1 - Comparing standard tag composition vs additive and subtractive inheritance overrides. Ex. 2 - Parent tag swap using tag overrides.","tags":["Upcoming Feature"]},{"location":"updates/changelog/","title":"TagStudio Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog, and this project adheres to Semantic Versioning.</p>"},{"location":"updates/changelog/#920-2024-05-14","title":"[9.2.0] - 2024-05-14","text":""},{"location":"updates/changelog/#added","title":"Added","text":"<ul> <li>Full macOS and Linux support</li> <li>Ability to apply tags to multiple selections at once</li> <li>Right-click context menu for opening files or their locations</li> <li>Support for all filetypes inside of the library</li> <li>Configurable filetype blacklist</li> <li>Option to automatically open last used library on startup</li> <li>Tool to convert folder structure to tag tree</li> <li>SIGTERM handling in console window</li> <li>Keyboard shortcuts for basic functions</li> <li>Basic support for plaintext thumbnails</li> <li>Default icon for files with no thumbnail support</li> <li>Menu action to close library</li> <li>All tags now show in the \"Add Tag\" panel by default</li> <li>Modal view to view and manage all library tags</li> <li>Build scripts for Windows and macOS</li> <li>Help menu option to visit the GitHub repository</li> <li>Toggleable \"Recent Libraries\" list in the entry side panel</li> </ul>"},{"location":"updates/changelog/#fixed","title":"Fixed","text":"<ul> <li>Fixed errors when performing actions with no library open</li> <li>Fixed bug where built-in tags were duplicated upon saving</li> <li>QThreads are now properly terminated on application exit</li> <li>Images with rotational EXIF data are now properly displayed</li> <li>Fixed \"truncated\" images causing errors</li> <li>Fixed images with large resolutions causing errors</li> </ul>"},{"location":"updates/changelog/#changed","title":"Changed","text":"<ul> <li>Updated minimum Python version to 3.12</li> <li>Various UI improvements</li> <li>Improved legibility of the Light Theme (still a WIP)</li> <li>Updated Dark Theme</li> <li>Added hand cursor to several clickable elements</li> <li>Fixed network paths not being able to load</li> <li>Various code cleanup and refactoring</li> <li>New application icons</li> </ul>"},{"location":"updates/changelog/#known-issues","title":"Known Issues","text":"<ul> <li>Using and editing multiple entry fields of the same type may result in incorrect field(s) being updated</li> <li>Adding Favorite or Archived tags via the thumbnail badges may apply the tag(s) to incorrect fields</li> <li>Searching for tag names with spaces does not currently function as intended<ul> <li>A temporary workaround it to omit spaces in tag names when  searching</li> </ul> </li> <li>Sorting fields using the \"Sort Fields\" macro may result in edit icons being shown for incorrect fields</li> </ul>"},{"location":"updates/changelog/#910-2024-04-22","title":"[9.1.0] - 2024-04-22","text":""},{"location":"updates/changelog/#added_1","title":"Added","text":"<ul> <li>Initial public release</li> </ul>"},{"location":"updates/roadmap/","title":"Feature Roadmap","text":"<p>This checklist details the current and remaining features required at a minimum for TagStudio to be considered \"Feature Complete\". This list is not a definitive list for additional feature requests and PRs as they come in, but rather an outline of my personal core feature set intended for TagStudio.</p>"},{"location":"updates/roadmap/#priorities","title":"Priorities","text":"<p>Features are broken up into the following priority levels, with nested priorities referencing their relative priority for the overall feature (i.e. A [LOW] priority feature can have a [HIGH] priority element but it otherwise still a [LOW] priority item overall):</p> <ul> <li>[HIGH] - Core feature</li> <li>[MEDIUM] - Important but not necessary</li> <li>[LOW] - Just nice to have</li> </ul>"},{"location":"updates/roadmap/#version-milestones","title":"Version Milestones","text":"<p>These version milestones are rough estimations for when the previous core features will be added. For a more definitive idea for when features are coming, please reference the current GitHub milestones.</p> <p>Note</p> <p>This list was created after the release of version 9.4</p>"},{"location":"updates/roadmap/#v95","title":"v9.5","text":""},{"location":"updates/roadmap/#core","title":"Core","text":"<ul> <li> SQL backend [HIGH]</li> </ul>"},{"location":"updates/roadmap/#tags","title":"Tags","text":"<ul> <li> Deleting Tags [HIGH]</li> <li> User-defined tag colors [HIGH]<ul> <li> ID based, not string or hex [HIGH]</li> <li> Color name [HIGH]</li> <li> Color value (hex) [HIGH]</li> <li> Existing colors are now a set of base colors [HIGH]</li> </ul> </li> <li> Tag Categories [HIGH]<ul> <li> Property available for tags that allow the tag and any inheriting from it to be displayed separately in the preview panel under a title [HIGH]</li> </ul> </li> </ul>"},{"location":"updates/roadmap/#search","title":"Search","text":"<ul> <li> Boolean operators [HIGH]</li> <li> Filename search [HIGH]</li> <li> File type search [HIGH]<ul> <li> Search by extension (e.g. \".jpg\", \".png\") [HIGH]<ul> <li> Optional consolidation of extension synonyms (i.e. \".jpg\" can equal \".jpeg\") [LOW]</li> </ul> </li> <li> Search by media type (e.g. \"image\", \"video\", \"document\") [MEDIUM]</li> </ul> </li> <li> Sort by date added [HIGH]</li> </ul>"},{"location":"updates/roadmap/#ui","title":"UI","text":"<ul> <li> Translations (Any applicable) [MEDIUM]</li> </ul>"},{"location":"updates/roadmap/#performance","title":"Performance","text":"<ul> <li> Thumbnail caching [HIGH]</li> </ul>"},{"location":"updates/roadmap/#v96","title":"v9.6","text":""},{"location":"updates/roadmap/#core_1","title":"Core","text":"<ul> <li> Cached file property table (media duration, word count, dimensions, etc.) [MEDIUM]</li> </ul>"},{"location":"updates/roadmap/#library","title":"Library","text":"<ul> <li> Multiple Root Directories per Library [HIGH]</li> <li> <code>.ts_ignore</code> (<code>.gitignore</code>-style glob ignoring) [HIGH]</li> <li> Sharable Color Packs [MEDIUM]<ul> <li> Human-readable (TOML) files containing tag data [HIGH]</li> <li> Importable [HIGH]</li> <li> Exportable [HIGH]</li> </ul> </li> </ul>"},{"location":"updates/roadmap/#tags_1","title":"Tags","text":"<ul> <li> Merging Tags [HIGH]</li> <li> Component/HAS subtags [HIGH]</li> <li> Tag Icons [HIGH]<ul> <li> Small Icons [HIGH]</li> <li> Large Icons for Profiles [MEDIUM]</li> <li> Built-in Icon Packs (i.e. Boxicons) [HIGH]</li> <li> User Defined Icons [HIGH]</li> </ul> </li> <li> Multiple Languages for Tag Strings [MEDIUM]<ul> <li> Title is tag name [HIGH]</li> <li> Title has tag color [MEDIUM]</li> <li> Tag marked as category does not display as a tag itself [HIGH]</li> </ul> </li> <li> Tag Overrides [MEDIUM]<ul> <li> Per-file overrides of subtags [HIGH]</li> </ul> </li> </ul>"},{"location":"updates/roadmap/#fields","title":"Fields","text":"<ul> <li> Datetime fields [HIGH]</li> <li> Custom field names [HIGH]</li> </ul>"},{"location":"updates/roadmap/#search_1","title":"Search","text":"<ul> <li> Field content search [HIGH]</li> <li> Sort by date created [HIGH]</li> <li> Sort by date modified [HIGH]</li> <li> Sort by filename [HIGH]</li> <li> HAS operator for composition tags [HIGH]</li> <li> Search bar rework<ul> <li> Improved tag autocomplete [HIGH]</li> <li> Tags appear as widgets in search bar [HIGH]</li> </ul> </li> </ul>"},{"location":"updates/roadmap/#ui_1","title":"UI","text":"<ul> <li> File duration on video thumbnails [HIGH]</li> <li> 3D Model Previews [MEDIUM]<ul> <li> STL Previews [HIGH]</li> </ul> </li> <li> Word count/line count on text thumbnails [LOW]</li> <li> Settings Menu [HIGH]</li> <li> Application Settings [HIGH]<ul> <li> Stored in system user folder/designated folder [HIGH]</li> </ul> </li> <li> Library Settings [HIGH]<ul> <li> Stored in <code>.TagStudio</code> folder [HIGH]</li> </ul> </li> <li> <p> Tagging Panel [HIGH]</p> <p>Togglebale persistent main window panel or popout. Replaces the current tag manager.</p> <ul> <li> Top Tags [HIGH]</li> <li> Recent Tags [HIGH]</li> <li> Tag Search [HIGH]</li> <li> Pinned Tags [HIGH]</li> </ul> </li> <li> <p> New tabbed tag building UI to support the new tag features [HIGH]</p> </li> </ul>"},{"location":"updates/roadmap/#v97","title":"v9.7","text":""},{"location":"updates/roadmap/#library_1","title":"Library","text":"<ul> <li> Entry groups [HIGH]<ul> <li> Groups for files/entries where the same entry can be in multiple groups [HIGH]</li> <li> Ability to number entries within group [HIGH]</li> <li> Ability to set sorting method for group [HIGH]</li> <li> Ability to set custom thumbnail for group [HIGH]</li> <li> Group is treated as entry with tags and metadata [HIGH]</li> <li> Nested groups [MEDIUM]</li> </ul> </li> </ul>"},{"location":"updates/roadmap/#search_2","title":"Search","text":"<ul> <li> Sort by relevance [HIGH]</li> <li> Sort by date taken (photos) [MEDIUM]</li> <li> Sort by file size [HIGH]</li> <li> Sort by file dimension (images/video) [LOW]</li> </ul>"},{"location":"updates/roadmap/#macros","title":"Macros","text":"<ul> <li> Sharable Macros [MEDIUM]<ul> <li> Standard notation format (TOML) contacting macro instructions [HIGH]</li> <li> Exportable [HIGH]</li> <li> Importable [HIGH]</li> </ul> </li> <li> Triggers [HIGH]<ul> <li> On new file [HIGH]</li> <li> On library refresh [HIGH]</li> <li> [...]</li> </ul> </li> <li> Actions [HIGH]<ul> <li> Add tag(s) [HIGH]</li> <li> Add field(s) [HIGH]</li> <li> Set field content [HIGH]</li> <li> [...]</li> </ul> </li> </ul>"},{"location":"updates/roadmap/#ui_2","title":"UI","text":"<ul> <li> Custom thumbnail overrides [MEDIUM]</li> <li> Toggle File Extension Label [MEDIUM]</li> <li> Toggle Duration Label [MEDIUM]</li> <li> Custom Tag Badges [LOW]</li> <li> Unified Media Player [HIGH]<ul> <li> Auto-hiding player controls</li> <li> Play/Pause [HIGH]</li> <li> Loop [HIGH]</li> <li> Toggle Autoplay [MEDIUM]</li> <li> Volume Control [HIGH]</li> <li> Toggle Mute [HIGH]</li> <li> Timeline scrubber [HIGH]</li> <li> Fullscreen [MEDIUM]</li> </ul> </li> <li> Library list view [HIGH]</li> <li> Configurable page size [HIGH]</li> </ul>"},{"location":"updates/roadmap/#v98","title":"v9.8","text":""},{"location":"updates/roadmap/#library_2","title":"Library","text":"<ul> <li> Automatic Entry Relinking [HIGH]<ul> <li> Detect Renames [HIGH]</li> <li> Detect Moves [HIGH]</li> <li> Detect Deletions [HIGH]</li> </ul> </li> </ul>"},{"location":"updates/roadmap/#search_3","title":"Search","text":"<ul> <li> OCR search [LOW]</li> <li> Fuzzy Search [LOW]</li> </ul>"},{"location":"updates/roadmap/#v99","title":"v9.9","text":""},{"location":"updates/roadmap/#library_3","title":"Library","text":"<ul> <li> Exportable Library Data [HIGH]<ul> <li> Standard notation format (i.e. JSON) contacting all library data [HIGH]</li> </ul> </li> </ul>"},{"location":"updates/roadmap/#tags_2","title":"Tags","text":"<ul> <li> Tag Packs [MEDIUM]<ul> <li> Human-readable (TOML) files containing tag data [HIGH]</li> <li> Multiple Languages for Tag Strings [MEDIUM]</li> <li> Importable [HIGH]</li> <li> Exportable [HIGH]</li> <li> Conflict resolution [HIGH]</li> </ul> </li> </ul>"},{"location":"updates/roadmap/#v100","title":"v10.0","text":"<ul> <li> All remaining [HIGH] and optional [MEDIUM] features</li> </ul>"},{"location":"updates/roadmap/#post-v100","title":"Post v10.0","text":""},{"location":"updates/roadmap/#core_2","title":"Core","text":"<ul> <li> Core Library/API</li> <li> Plugin Support</li> </ul>"},{"location":"updates/schema_changes/","title":"Save Format Changes","text":"<p>This page outlines the various changes made the TagStudio save file format over time, sometimes referred to as the \"database\" or \"database file\".</p>"},{"location":"updates/schema_changes/#json","title":"JSON","text":"Used From Used Until Format Location v1.0.0 v9.4.2 JSON <code>&lt;Library Folder&gt;</code>/.TagStudio/ts_library.json <p>The legacy database format for public TagStudio releases v9.1 through v9.4.2. Variations of this format had been used privately since v1.0.0.</p> <p>Replaced by the new SQLite format introduced in TagStudio v9.5.0 Pre-Release 1.</p>"},{"location":"updates/schema_changes/#db_version-6","title":"DB_VERSION 6","text":"Used From Used Until Format Location v9.5.0-PR1 v9.5.0-PR1 SQLite <code>&lt;Library Folder&gt;</code>/.TagStudio/ts_library.sqlite <p>The first public version of the SQLite save file format.</p> <p>Migration from the legacy JSON format is provided via a walkthrough when opening a legacy library in TagStudio v9.5.0 Pre-Release 1 or later.</p>"},{"location":"updates/schema_changes/#db_version-7","title":"DB_VERSION 7","text":"Used From Used Until Format Location v9.5.0-PR2 v9.5.0-PR3 SQLite <code>&lt;Library Folder&gt;</code>/.TagStudio/ts_library.sqlite <ul> <li>Repairs \"Description\" fields to use a TEXT_LINE key instead of a TEXT_BOX key.</li> <li>Repairs tags that may have a disambiguation_id pointing towards a deleted tag.</li> </ul>"},{"location":"updates/schema_changes/#db_version-8","title":"DB_VERSION 8","text":"Used From Used Until Format Location v9.5.0-PR4 v9.5.1 SQLite <code>&lt;Library Folder&gt;</code>/.TagStudio/ts_library.sqlite <ul> <li>Adds the <code>color_border</code> column to <code>tag_colors</code> table. Used for instructing the secondary color to apply to a tag's border as a new optional behavior.</li> <li>Adds three new default colors: \"Burgundy (TagStudio Shades)\", \"Dark Teal (TagStudio Shades)\", and \"Dark Lavender (TagStudio Shades)\".</li> <li>Updates Neon colors to use the new <code>color_border</code> property.</li> </ul>"},{"location":"updates/schema_changes/#db_version-9","title":"DB_VERSION 9","text":"Used From Used Until Format Location v9.5.2 Current SQLite <code>&lt;Library Folder&gt;</code>/.TagStudio/ts_library.sqlite <ul> <li>Adds the <code>filename</code> column to the <code>entries</code> table. Used for sorting entries by filename in search results.</li> </ul>"},{"location":"utilities/macro/","title":"Tools &amp; Macros","text":"<p>Tools and macros are features that serve to create a more fluid library-managing process, or provide some extra functionality. Please note that some are still in active development and will be fleshed out in future updates.</p>"},{"location":"utilities/macro/#tools","title":"Tools","text":""},{"location":"utilities/macro/#fix-unlinked-entries","title":"Fix Unlinked Entries","text":"<p>This tool displays the number of unlinked entries, and some options for their resolution.</p> Refresh Scans through the library and updates the unlinked entry count. Search &amp; Relink Attempts to automatically find and reassign missing files. Delete Unlinked Entries Displays a confirmation prompt containing the list of all missing files to be deleted before committing to or cancelling the operation."},{"location":"utilities/macro/#fix-duplicate-files","title":"Fix Duplicate Files","text":"<p>This tool allows for management of duplicate files in the library using a DupeGuru file.</p> Load DupeGuru File load the \"results\" file created from a DupeGuru scan Mirror Entries Duplicate entries will have their contents mirrored across all instances. This allows for duplicate files to then be deleted with DupeGuru as desired, without losing the field data that has been assigned to either. (Once deleted, the \"Fix Unlinked Entries\" tool can be used to clean up the duplicates)"},{"location":"utilities/macro/#create-collage","title":"Create Collage","text":"<p>This tool is a preview of an upcoming feature. When selected, TagStudio will generate a collage of all the contents in a Library, which can be found in the Library folder (\"/your-folder/.TagStudio/collages/\"). Note that this feature is still in early development, and doesn't yet offer any customization options.</p>"},{"location":"utilities/macro/#macros","title":"Macros","text":""},{"location":"utilities/macro/#auto-fill-wip","title":"Auto-fill [WIP]","text":"<p>Tool is in development and will be documented in future update.</p>"},{"location":"utilities/macro/#sort-fields","title":"Sort fields","text":"<p>Tool is in development, will allow for user-defined sorting of fields.</p>"},{"location":"utilities/macro/#folders-to-tags","title":"Folders to Tags","text":"<p>Creates tags from the existing folder structure in the library, which are previewed in a hierarchy view for the user to confirm. A tag will be created for each folder and applied to all entries, with each subfolder being linked to the parent folder as a parent tag. Tags will initially be named after the folders, but can be fully edited and customized afterwards.</p>"}]}